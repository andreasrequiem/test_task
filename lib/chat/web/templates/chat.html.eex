<!DOCTYPE html>
<html lang="uk">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="x-ua-compatible" content="ie=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

  <title>Чат Кімната <%= room %></title>

  <style>
    body {
      background-color: #e9ecef;
      padding: 20px;
    }
    .chat-container {
      max-width: 800px;
      margin: auto;
      background: #ffffff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    #messages {
      height: 400px;
      overflow-y: scroll;
      border: 1px solid #dee2e6;
      padding: 10px;
      border-radius: 4px;
      background-color: #f8f9fa;
      margin-bottom: 20px;
    }
    .message {
      margin-bottom: 10px;
    }
    .message.user {
      text-align: right;
    }
    .message.bot {
      text-align: left;
    }
    .status-indicator {
      width: 15px;
      height: 15px;
      border-radius: 50%;
      display: inline-block;
      margin-right: 5px;
    }
    .status-connected {
      background-color: #28a745;
    }
    .status-disconnected {
      background-color: #dc3545;
    }
    .btn-custom {
      width: 150px;
    }
  </style>

  <script>
    let wsConnection;
    let connected = false;

    function updateStatus(connectedStatus) {
      const status = document.getElementById("statusIndicator");
      const statusText = document.getElementById("statusText");
      if (connectedStatus) {
        status.classList.remove("status-disconnected");
        status.classList.add("status-connected");
        statusText.textContent = "Підключено";
        document.getElementById("connectBtn").disabled = true;
        document.getElementById("disconnectBtn").disabled = false;
      } else {
        status.classList.remove("status-connected");
        status.classList.add("status-disconnected");
        statusText.textContent = "Відключено";
        document.getElementById("connectBtn").disabled = false;
        document.getElementById("disconnectBtn").disabled = true;
      }
    }

    function appendMessage(sender, message, type) {
      const messagesDiv = document.getElementById("messages");
      const messageDiv = document.createElement("div");
      messageDiv.classList.add("message", type);
      messageDiv.innerHTML = `<strong>${sender}:</strong> ${message}`;
      messagesDiv.appendChild(messageDiv);
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    function connectWebSocket() {
      if (connected) return;
      wsConnection = new WebSocket('ws://' + window.location.host + '/ws');

      wsConnection.onopen = function() {
        connected = true;
        updateStatus(true);
        appendMessage('Система', 'Підключено до сервера.', 'bot');
        console.log("WebSocket підключено.");
      };

      wsConnection.onmessage = function(event) {
        appendMessage('Бот', event.data, 'bot');
      };

      wsConnection.onclose = function() {
        connected = false;
        updateStatus(false);
        appendMessage('Система', 'Відключено від сервера.', 'bot');
        console.log("WebSocket відключено.");
      };

      wsConnection.onerror = function(error) {
        console.error("Помилка WebSocket:", error);
      };
    }

    function disconnectWebSocket() {
      if (!connected) return;
      wsConnection.close();
    }

    function sendMessage() {
      const input = document.getElementById("myMessage");
      const message = input.value.trim();
      if (message && connected) {
        wsConnection.send(message);
        appendMessage('Ви', message, 'user');
        input.value = "";
        input.focus();
      }
    }


    function handleKeyPress(event) {
      if (event.key === 'Enter') {
        event.preventDefault();
        sendMessage();
      }
    }

    window.onload = function() {
      updateStatus(false);

      const inputField = document.getElementById("myMessage");
      inputField.addEventListener("keypress", handleKeyPress);
    };
  </script>
</head>
<body>
  <div class="chat-container">
    <h2>Чат Кімната №<%= room %></h2>
    <div class="mb-3">
      <span id="statusIndicator" class="status-indicator status-disconnected"></span>
      <span id="statusText">Відключено</span>
    </div>
    <div id="messages" class="mb-3"></div>
    <div class="input-group mb-3">
      <input type="text" id="myMessage" class="form-control" placeholder="Введіть ваше повідомлення..." aria-label="Повідомлення">
      <button class="btn btn-primary" type="button" onclick="sendMessage()">Відправити</button>
    </div>
    <div class="mb-3">
      <button id="connectBtn" class="btn btn-success me-2 btn-custom" onclick="connectWebSocket()">Підключитися</button>
      <button id="disconnectBtn" class="btn btn-danger btn-custom" onclick="disconnectWebSocket()" disabled>Відключитися</button>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
